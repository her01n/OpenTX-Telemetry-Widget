{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"INAV Lua Telemetry INAV Lua Telemetry Flight Status for Taranis/Horus/Jumper Transmitters FrSky SmartPort(S.Port), D-series, F.Port & TBS Crossfire on Taranis, Horus & Jumper Contact @nvrm17 on telegram for any questions Support Issues Screenshots of FrSky SmartPort(S.Port), D-series, F.Port & TBS Crossfire on Taranis, Horus & Jumper View on Horus/Jumper T16 transmitters Views on other radios (Jumper T12, Taranis X9D and more) Q X7, X-Lite & Jumper T12 Taranis X9D, X9D+ and X9E Video of Lua Telemetry","title":"INAV Lua Telemetry"},{"location":"#inav-lua-telemetry","text":"INAV Lua Telemetry Flight Status for Taranis/Horus/Jumper Transmitters FrSky SmartPort(S.Port), D-series, F.Port & TBS Crossfire on Taranis, Horus & Jumper Contact @nvrm17 on telegram for any questions Support Issues","title":"INAV Lua Telemetry"},{"location":"#screenshots-of-frsky-smartportsport-d-series-fport-tbs-crossfire-on-taranis-horus-jumper","text":"","title":"Screenshots of FrSky SmartPort(S.Port), D-series, F.Port &amp; TBS Crossfire on Taranis, Horus &amp; Jumper"},{"location":"#view-on-horusjumper-t16-transmitters","text":"","title":"View on Horus/Jumper T16 transmitters"},{"location":"#views-on-other-radios-jumper-t12-taranis-x9d-and-more","text":"Q X7, X-Lite & Jumper T12 Taranis X9D, X9D+ and X9E","title":"Views on other radios (Jumper T12, Taranis X9D and more)"},{"location":"#video-of-lua-telemetry","text":"","title":"Video of Lua Telemetry"},{"location":"Configuration-Settings/","text":"Taranis Press the Menu button ( Shift on X-Lite) to display the configuration options menu: Use the dial or +/- buttons to cycle through the menu or select the desired setting Press Enter/dial to select and deselect a menu option Press Exit or RTN to deselect a menu option or escape the configuration menu Horus/Jumper T16 Must be unarmed to access the config menu when running as a widget Use the following (mode 2) stick controls to navigate the config menu: Other radios There are a number of smaller ('budget') radios, often with few buttons and a small screen. The combination of fewer buttons and the small screen makes finding a common button press somewhat problematic; the following are supported (2.0.2 and later): Jumper T12 / T-Lite : Menu long press to access the config menu Radiomaster Zorro / TX12 : Roller long press to access the config menu Dismiss the \"Reset\" menu with \"RTN\". Access the configuration options via the roller. Configuration menu options Note Options without selections have either been disabled by another option setting or are not available on your transmitter or telemetry protocol. Battery View - Total battery voltage / Cell voltage average (default: Total) Battery Alert - All battery alerts on, off or only critical alerts (default: All) Cell Low - Cell voltage for low battery warning (default: 3.5V) [ help ] Cell Critical - Cell voltage for battery critical warning (default: 3.4V) [ help ] Cell Calculation - Voltage to calculate cell count, 4.3V for LiPo, 4.4V for LiHV (default: 4.3V) Fuel Unit - Match to INAV CLI value smartport_fuel_unit (default: Percent) [ help ] Battery Capacity - Set the battery capacity for Crossfire (default: 1500mAh) Fuel Low - Fuel percentage for low battery warning (default: 30%) [ help ] Fuel Critical - Fuel percentage for battery critical warning (default: 20%) [ help ] Altitude Alert - Turn on/off the altitude alert (default: On) Max Altitude - Altitude warning starts when over this value (default: 400' or 120m) Timer - Show the automatic flight timer, timer1, timer2 or turn timer off (default: Auto) Tx Voltage - Show transmitter voltage as graph and/or numerical value (default: Both or Graph) Rx Voltage - Turn on/off the receiver voltage in the title (default: On) Variometer - Vertical speed graph, voice notifications or off (default: Off) Vario Steps - If Variometer is set to Voice, select the altitude steps (default: 10' or 10m) Altitude Graph - Turn off or set altitude graph time period from 1-6 minutes (default: Off) Voice Alerts - All voice alerts on, off or only critical alerts (default: All) Feedback - Turn beeper and/or haptic feedback for alerts on or off (default: All) RTH Feedback - Return to home beeper and haptic feedback on or off (default: On) HeadFree Feedback - Head free beeper and haptic feedback on or off (default: On) RSSI Feedback - RSSI beeper and haptic feedback on or off (default: On) AltHold Center FB - Hepatic/audio feedback for Alt Hold center throttle position (default: Off) Speed Sensor - Speed sensor to use, GPS or (if available) Pitot air speed (default: GPS) View Mode - Classic, pilot, radar or altitude graph view modes (default: Classic) Roll Indicator - Turn on/off roll indicator on Horus (default: Off) Aircraft Symbol - Options 0 - 5 on Horus, see below for options (default: 0) HUD Home Icon - Select HUD or simple orientation for home icon on Horus (default: Off) Center Map Home - Turn on/off centering of the radar home position on Horus (default: Off) Orientation - Launch/pilot-based or compass-based default orientation (default: Launch) GPS HDOP View - View the GPS accuracy (HDOP) as a Graph or Decimal (default: Graph) GPS Warning - GPS accuracy (HDOP) to trigger warning (default: > 3.5 HDOP [at least 1 bar]) GPS - GPS coordinates as decimal or degrees/minutes format (default: Decimal) Playback Log - Playback telemetry log files (latest 5 logs from the last 2 weeks) [ help ] Suggested Battery Settings Voltage and Current Calibration Using a multimeter, calibrate the voltage with the \"Voltage Scale\" in INAV configurator If you have a current sensor, make sure you calibrate it In INAV Configurator Voltage source to use for alarms and telemetry: Raw Number of cells: 0 (0=auto, set if you always use the same cell count) Maximum cell voltage for cell count detection: 4.3 Minimum cell voltage: 3.4 (match \"Cell Critical\" in Lua Telemetry) Maximum cell voltage: 4.2 Warning cell voltage: 3.5 (match \"Cell Low\" in Lua Telemetry) Set capacity in mAh to battery capacity Warning capacity: 30% (match \"Fuel Low\" in Lua Telemetry) Critical capacity: 10% In INAV CLI (ignore for TBS Crossfire) set smartport_fuel_unit = percent set report_cell_voltage = OFF (if set to ON Lua Telemetry can't show total battery voltage) In Lua Telemetry Cell Low: 3.5V (match \"Warning cell voltage\" in INAV) Cell Critical: 3.4V (match \"Minimum cell voltage\" in INAV) Fuel Unit: Percent Fuel Low: 30% (match \"Warning capacity\" in INAV) Fuel Critical: 20% Playback Telemetry Log Files Warning Telemetry log file playback works really well on Horus transmitters. However, while it works on my Taranis Q X7, for others it may crash with a \" attempt to call a nil value \" or \" not enough memory \" error. This means you're using too much memory for other things on your transmitter and it doesn't have enough memory to playback the logs. Not switching views and not using the pilot view will use less memory, but it's possible you just won't be able to playback log files on a Taranis transmitter if you have too little memory available. Log file playback allows you to playback the latest 5 telemetry log files from up to the last 2 weeks on the currently selected model. You must be unarmed for this to work and if you arm while playing back a log file, the playback will be terminated. Setup Before you can playback a telemetry log file you need to make sure you're logging your telemetry. By default for each telemetry sensor, the Logs option is already checked (unless you unchecked it). However, it still won't log unless you setup a special function. In the model setup on your transmitter, page to the SPECIAL FUNCTIONS page. In an empty slot, create a special function that's activated from your arm switch (in my case SF\u2193 ). It should look something like this: SF1 SF\u2193 SD Logs 0.2s This will log your telemetry 5 times per second automatically every time you arm. You can set this up on any switch you'd like, but the arm switch is most common. You can also change the value to 0.1s to log 10 times a second or any other value you wish. Note that the log playback will be smoother if you select a lower log frequency value. Playback To playback a log file, go to the config menu and scroll to the last item. If there's any log files in the last 2 weeks, you'll see a date (in YY-MM-DD format). You can cycle through the dates and select the one you wish to playback (exit will unselect the menu option). Standard playback will be at close to normal speed (note the timestamp in the title bar). When playing back, you can use the right stick (mode 2) to fast forward (stick up), reverse (stick down), pause (hold stick right), or quit (stick left). The further you move the stick up and down the faster the forward or reverse. The stick center position is playback at normal speed. When it gets to the end of the log, it will pause. As multiple flights from the same day are recorded to the same telemetry log files, the playback will continue to the next flight (note the timestamp in the title for time jumps which will be a new flight). Horus/Jumper T16 aircraft symbol options","title":"Configuration Settings"},{"location":"Configuration-Settings/#taranis","text":"Press the Menu button ( Shift on X-Lite) to display the configuration options menu: Use the dial or +/- buttons to cycle through the menu or select the desired setting Press Enter/dial to select and deselect a menu option Press Exit or RTN to deselect a menu option or escape the configuration menu","title":"Taranis"},{"location":"Configuration-Settings/#horusjumper-t16","text":"Must be unarmed to access the config menu when running as a widget Use the following (mode 2) stick controls to navigate the config menu:","title":"Horus/Jumper T16"},{"location":"Configuration-Settings/#other-radios","text":"There are a number of smaller ('budget') radios, often with few buttons and a small screen. The combination of fewer buttons and the small screen makes finding a common button press somewhat problematic; the following are supported (2.0.2 and later): Jumper T12 / T-Lite : Menu long press to access the config menu Radiomaster Zorro / TX12 : Roller long press to access the config menu Dismiss the \"Reset\" menu with \"RTN\". Access the configuration options via the roller.","title":"Other radios"},{"location":"Configuration-Settings/#configuration-menu-options","text":"Note Options without selections have either been disabled by another option setting or are not available on your transmitter or telemetry protocol. Battery View - Total battery voltage / Cell voltage average (default: Total) Battery Alert - All battery alerts on, off or only critical alerts (default: All) Cell Low - Cell voltage for low battery warning (default: 3.5V) [ help ] Cell Critical - Cell voltage for battery critical warning (default: 3.4V) [ help ] Cell Calculation - Voltage to calculate cell count, 4.3V for LiPo, 4.4V for LiHV (default: 4.3V) Fuel Unit - Match to INAV CLI value smartport_fuel_unit (default: Percent) [ help ] Battery Capacity - Set the battery capacity for Crossfire (default: 1500mAh) Fuel Low - Fuel percentage for low battery warning (default: 30%) [ help ] Fuel Critical - Fuel percentage for battery critical warning (default: 20%) [ help ] Altitude Alert - Turn on/off the altitude alert (default: On) Max Altitude - Altitude warning starts when over this value (default: 400' or 120m) Timer - Show the automatic flight timer, timer1, timer2 or turn timer off (default: Auto) Tx Voltage - Show transmitter voltage as graph and/or numerical value (default: Both or Graph) Rx Voltage - Turn on/off the receiver voltage in the title (default: On) Variometer - Vertical speed graph, voice notifications or off (default: Off) Vario Steps - If Variometer is set to Voice, select the altitude steps (default: 10' or 10m) Altitude Graph - Turn off or set altitude graph time period from 1-6 minutes (default: Off) Voice Alerts - All voice alerts on, off or only critical alerts (default: All) Feedback - Turn beeper and/or haptic feedback for alerts on or off (default: All) RTH Feedback - Return to home beeper and haptic feedback on or off (default: On) HeadFree Feedback - Head free beeper and haptic feedback on or off (default: On) RSSI Feedback - RSSI beeper and haptic feedback on or off (default: On) AltHold Center FB - Hepatic/audio feedback for Alt Hold center throttle position (default: Off) Speed Sensor - Speed sensor to use, GPS or (if available) Pitot air speed (default: GPS) View Mode - Classic, pilot, radar or altitude graph view modes (default: Classic) Roll Indicator - Turn on/off roll indicator on Horus (default: Off) Aircraft Symbol - Options 0 - 5 on Horus, see below for options (default: 0) HUD Home Icon - Select HUD or simple orientation for home icon on Horus (default: Off) Center Map Home - Turn on/off centering of the radar home position on Horus (default: Off) Orientation - Launch/pilot-based or compass-based default orientation (default: Launch) GPS HDOP View - View the GPS accuracy (HDOP) as a Graph or Decimal (default: Graph) GPS Warning - GPS accuracy (HDOP) to trigger warning (default: > 3.5 HDOP [at least 1 bar]) GPS - GPS coordinates as decimal or degrees/minutes format (default: Decimal) Playback Log - Playback telemetry log files (latest 5 logs from the last 2 weeks) [ help ]","title":"Configuration menu options"},{"location":"Configuration-Settings/#suggested-battery-settings","text":"","title":"Suggested Battery Settings"},{"location":"Configuration-Settings/#voltage-and-current-calibration","text":"Using a multimeter, calibrate the voltage with the \"Voltage Scale\" in INAV configurator If you have a current sensor, make sure you calibrate it","title":"Voltage and Current Calibration"},{"location":"Configuration-Settings/#in-inav-configurator","text":"Voltage source to use for alarms and telemetry: Raw Number of cells: 0 (0=auto, set if you always use the same cell count) Maximum cell voltage for cell count detection: 4.3 Minimum cell voltage: 3.4 (match \"Cell Critical\" in Lua Telemetry) Maximum cell voltage: 4.2 Warning cell voltage: 3.5 (match \"Cell Low\" in Lua Telemetry) Set capacity in mAh to battery capacity Warning capacity: 30% (match \"Fuel Low\" in Lua Telemetry) Critical capacity: 10%","title":"In INAV Configurator"},{"location":"Configuration-Settings/#in-inav-cli-ignore-for-tbs-crossfire","text":"set smartport_fuel_unit = percent set report_cell_voltage = OFF (if set to ON Lua Telemetry can't show total battery voltage)","title":"In INAV CLI (ignore for TBS Crossfire)"},{"location":"Configuration-Settings/#in-lua-telemetry","text":"Cell Low: 3.5V (match \"Warning cell voltage\" in INAV) Cell Critical: 3.4V (match \"Minimum cell voltage\" in INAV) Fuel Unit: Percent Fuel Low: 30% (match \"Warning capacity\" in INAV) Fuel Critical: 20%","title":"In Lua Telemetry"},{"location":"Configuration-Settings/#playback-telemetry-log-files","text":"Warning Telemetry log file playback works really well on Horus transmitters. However, while it works on my Taranis Q X7, for others it may crash with a \" attempt to call a nil value \" or \" not enough memory \" error. This means you're using too much memory for other things on your transmitter and it doesn't have enough memory to playback the logs. Not switching views and not using the pilot view will use less memory, but it's possible you just won't be able to playback log files on a Taranis transmitter if you have too little memory available. Log file playback allows you to playback the latest 5 telemetry log files from up to the last 2 weeks on the currently selected model. You must be unarmed for this to work and if you arm while playing back a log file, the playback will be terminated.","title":"Playback Telemetry Log Files"},{"location":"Configuration-Settings/#setup","text":"Before you can playback a telemetry log file you need to make sure you're logging your telemetry. By default for each telemetry sensor, the Logs option is already checked (unless you unchecked it). However, it still won't log unless you setup a special function. In the model setup on your transmitter, page to the SPECIAL FUNCTIONS page. In an empty slot, create a special function that's activated from your arm switch (in my case SF\u2193 ). It should look something like this: SF1 SF\u2193 SD Logs 0.2s This will log your telemetry 5 times per second automatically every time you arm. You can set this up on any switch you'd like, but the arm switch is most common. You can also change the value to 0.1s to log 10 times a second or any other value you wish. Note that the log playback will be smoother if you select a lower log frequency value.","title":"Setup"},{"location":"Configuration-Settings/#playback","text":"To playback a log file, go to the config menu and scroll to the last item. If there's any log files in the last 2 weeks, you'll see a date (in YY-MM-DD format). You can cycle through the dates and select the one you wish to playback (exit will unselect the menu option). Standard playback will be at close to normal speed (note the timestamp in the title bar). When playing back, you can use the right stick (mode 2) to fast forward (stick up), reverse (stick down), pause (hold stick right), or quit (stick left). The further you move the stick up and down the faster the forward or reverse. The stick center position is playback at normal speed. When it gets to the end of the log, it will pause. As multiple flights from the same day are recorded to the same telemetry log files, the playback will continue to the next flight (note the timestamp in the title for time jumps which will be a new flight).","title":"Playback"},{"location":"Configuration-Settings/#horusjumper-t16-aircraft-symbol-options","text":"","title":"Horus/Jumper T16 aircraft symbol options"},{"location":"EdgeTX-Compatibility/","text":"Developer Notes - EDGETX Compatibility Introduction This guide describes now to modify the inav Lua Telemetry widget such that it works correctly in both EdgeTX and OpenTX. EdgeTX is a touch-screen enabled fork of OpenTX. As part of the touch-screen enhancement, EdgeTX has expanded the way that some of the colour LCD APIs function. These changes are described in the excellent EdgeTX API documenation . Summary of changes of the inav Lua widget In order to keep the inav Lua widget compatible with both EdgeTX and OpenTX, the following are required for code that may run on colour screens. Do not modify the indexed colours as these are shared by the system theme and other widgets. Use the new data.RBG() function to convert RGB colour definitions to a Lua COLOR . Do not call lcd.RBG() directly as it may return nil under some circumstances on OpenTX. Do not use pre-computed integer values for colours; these will not work on EdgeTX. Do not set colours and display flags directly on colour devices . Use the new data.set_flags() function as this will work correctly on both EdgeTX and OpenTX. It will also work on older monochrome displays, but is unnecesasry in code that will not be executed on a colour device (e.g. src/SCRIPTS/TELEMETRY/iNav/radar.lua ); note that src/SCRIPTS/TELEMETRY/iNav/menu.lua requires some care, it is runs on both colour and monochrome devices. Hints and tips The project should only contain a single instance of CUSTOM_COLOR ; this is embedded in src/SCRIPTS/TELEMETRY/iNav/func_h.lua and is only used on OpenTX. The project uses its own colour map. It should not contain any other instances of _COLOR symbols. The user preference text colour is cached in data.TextColor , the user preference warning colour (which the widget modifies) is cached in data.WarningColor . Examples local mycol = data.RGB(0, 121, 180) local myflags = data.set_flags(MIDSIZE + RIGHT, mycol) text(x, y, \"A Message\", myflags) text(x1, y2, \"More Text\", myflags) text(x2, y2, \"Something else\", data.set_flags(0, data.TextColor)) -- note we can't use myflags again (at least OpenTX) without resetting the value line(x2, y2, x3, y3, SOLID, data.set_flags(0, LIGHTGREY))","title":"Developer Notes - EDGETX Compatibility"},{"location":"EdgeTX-Compatibility/#developer-notes-edgetx-compatibility","text":"","title":"Developer Notes - EDGETX Compatibility"},{"location":"EdgeTX-Compatibility/#introduction","text":"This guide describes now to modify the inav Lua Telemetry widget such that it works correctly in both EdgeTX and OpenTX. EdgeTX is a touch-screen enabled fork of OpenTX. As part of the touch-screen enhancement, EdgeTX has expanded the way that some of the colour LCD APIs function. These changes are described in the excellent EdgeTX API documenation .","title":"Introduction"},{"location":"EdgeTX-Compatibility/#summary-of-changes-of-the-inav-lua-widget","text":"In order to keep the inav Lua widget compatible with both EdgeTX and OpenTX, the following are required for code that may run on colour screens. Do not modify the indexed colours as these are shared by the system theme and other widgets. Use the new data.RBG() function to convert RGB colour definitions to a Lua COLOR . Do not call lcd.RBG() directly as it may return nil under some circumstances on OpenTX. Do not use pre-computed integer values for colours; these will not work on EdgeTX. Do not set colours and display flags directly on colour devices . Use the new data.set_flags() function as this will work correctly on both EdgeTX and OpenTX. It will also work on older monochrome displays, but is unnecesasry in code that will not be executed on a colour device (e.g. src/SCRIPTS/TELEMETRY/iNav/radar.lua ); note that src/SCRIPTS/TELEMETRY/iNav/menu.lua requires some care, it is runs on both colour and monochrome devices.","title":"Summary of changes of the inav Lua widget"},{"location":"EdgeTX-Compatibility/#hints-and-tips","text":"The project should only contain a single instance of CUSTOM_COLOR ; this is embedded in src/SCRIPTS/TELEMETRY/iNav/func_h.lua and is only used on OpenTX. The project uses its own colour map. It should not contain any other instances of _COLOR symbols. The user preference text colour is cached in data.TextColor , the user preference warning colour (which the widget modifies) is cached in data.WarningColor .","title":"Hints and tips"},{"location":"EdgeTX-Compatibility/#examples","text":"local mycol = data.RGB(0, 121, 180) local myflags = data.set_flags(MIDSIZE + RIGHT, mycol) text(x, y, \"A Message\", myflags) text(x1, y2, \"More Text\", myflags) text(x2, y2, \"Something else\", data.set_flags(0, data.TextColor)) -- note we can't use myflags again (at least OpenTX) without resetting the value line(x2, y2, x3, y3, SOLID, data.set_flags(0, LIGHTGREY))","title":"Examples"},{"location":"Getting-Started/","text":"Installation Tip To upgrade from a previous version, see the ( much shorter) upgrade instructions Don't be too concerned about the length of these instructions. The first two sections are about setting up telemetry in INAV and your transmitter, which for most is already completed. Also, the instructions are for multiple transmitters, telemetry protocols and I've tried to be very descriptive so even a novice could follow along. Therefore, it's a bit verbose but proceeds quickly, I promise. INAV Configurator Telemetry Setup Setup SmartPort(S.Port), F.Port, D-series, or Crossfire telemetry to send to your transmitter: INAV telemetry docs FrSky receivers (skip for TBS Crossfire): If you have an current sensor and want to show fuel percent remaining: set smartport_fuel_unit = PERCENT Set battery_capacity to the mAh you want to draw from your battery If instead you want to show the current sensor's mAh: set smartport_fuel_unit = MAH With INAV v2.0.0+, set frsky_pitch_roll = ON in CLI settings for accurate attitude display and pitch angle Add Telemetry Sensors to Transmitter With battery connected and after GPS fix discover telemetry sensors so all telemetry sensors are discovered FrSky receivers (skip for TBS Crossfire): Telemetry distance sensor name 0420 (or 0007 with D-series receivers) should be changed to Dist and set to the desired unit: m or ft The sensors Dist , Alt , GAlt and Gspd can be changed to the desired unit: m or ft / kmh or mph If you set frsky_pitch_roll = ON on INAV v2.0.0+ (which I suggest) you can optionally change the following for clarification: Telemetry sensor 0430 (or 0008 with D-series receivers) can be changed to Ptch Telemetry sensor 0440 (or 0020 with D-series receivers) can be changed to Roll Don't change Tmp1 or Tmp2 from Celsius to Fahrenheit! They're not temps (used for flight modes and GPS info) If you don't have a current sensor, you can optionally delete or rename the Fuel sensor so it doesn't show in Lua Telemetry Install/Setup Lua Telemetry on Transmitter Download the latest LuaTelemetry.zip file (Note: NOT the source code) Copy the contents of the ZIP file ( SCRIPTS and WIDGETS folders) to the transmitter's SD card's root Taranis: In model setup, page to DISPLAY Set desired screen to Script Select iNav Horus/Jumper T16: Long-press TELE to access the user interface/views layout Select the desired view (or create a new one) Make Layout full screen, turn off Top bar and Sliders+Trims Select Setup widgets Press Enter till a menu appears and select Select widget Scroll to the iNav widget and press Enter Optionally (while still selecting the iNAV script), long-press Enter , select Widget settings where you can enable Restore (to restore your theme's colors) and set your theme's Text color and Warning color Nirvana NV14: Press the Widgets icon Select the desired view Change the layout to full screen Uncheck all boxes Select Setup widgets , tap the screen and select iNAV Optionally, you can enable Restore (to restore your theme's colors) and set your theme's Text color and Warning color Press EXIT or RTN several times to exit (back icon on Nirvana) Download Options When downloading INAV Lua Telemetry . There may be multiple download options at the bottom of the release. Following are descriptions of each download option: LuaTelemetry-Horus-en.zip - Horus transmitters with English sound files only LuaTelemetry-Horus.zip - Horus transmitters with sound files for all supported languages LuaTelemetry-Taranis-en.zip - Taranis transmitters with English sound files only LuaTelemetry-Taranis.zip - Taranis transmitters with sound files for all supported languages LuaTelemetry.zip - Taranis and Horus including sound files for all supported languages Source code (zip) - ZIP compressed source code for this release - not for transmitter install Source code (tar.gz) - Tarball format source code for this release - not for transmitter install If you just want to install without thinking about it, download and install the latest LuaTelemetry.zip file which includes everything and will work on supported radios in any available language. The other download options may be provided in order to save a bit of SD card space on the transmitter and to keep the install clean of unneeded files. Running Lua Telemetry Taranis: From the main screen on your transmitter, long-press Page (down d-pad on X-Lite) If Lua Telemetry isn't on your first page, short-press Page to the Lua Telemetry screen Horus/Jumper T16/Nirvava NV14: From the main screen on your transmitter, press PgUp/Dn (swipe left on Nirvana) to the Lua Telemetry view Screen Description Configuration Settings Tips & Common Problems","title":"Getting Started"},{"location":"Getting-Started/#installation","text":"Tip To upgrade from a previous version, see the ( much shorter) upgrade instructions Don't be too concerned about the length of these instructions. The first two sections are about setting up telemetry in INAV and your transmitter, which for most is already completed. Also, the instructions are for multiple transmitters, telemetry protocols and I've tried to be very descriptive so even a novice could follow along. Therefore, it's a bit verbose but proceeds quickly, I promise.","title":"Installation"},{"location":"Getting-Started/#inav-configurator-telemetry-setup","text":"Setup SmartPort(S.Port), F.Port, D-series, or Crossfire telemetry to send to your transmitter: INAV telemetry docs FrSky receivers (skip for TBS Crossfire): If you have an current sensor and want to show fuel percent remaining: set smartport_fuel_unit = PERCENT Set battery_capacity to the mAh you want to draw from your battery If instead you want to show the current sensor's mAh: set smartport_fuel_unit = MAH With INAV v2.0.0+, set frsky_pitch_roll = ON in CLI settings for accurate attitude display and pitch angle","title":"INAV Configurator Telemetry Setup"},{"location":"Getting-Started/#add-telemetry-sensors-to-transmitter","text":"With battery connected and after GPS fix discover telemetry sensors so all telemetry sensors are discovered FrSky receivers (skip for TBS Crossfire): Telemetry distance sensor name 0420 (or 0007 with D-series receivers) should be changed to Dist and set to the desired unit: m or ft The sensors Dist , Alt , GAlt and Gspd can be changed to the desired unit: m or ft / kmh or mph If you set frsky_pitch_roll = ON on INAV v2.0.0+ (which I suggest) you can optionally change the following for clarification: Telemetry sensor 0430 (or 0008 with D-series receivers) can be changed to Ptch Telemetry sensor 0440 (or 0020 with D-series receivers) can be changed to Roll Don't change Tmp1 or Tmp2 from Celsius to Fahrenheit! They're not temps (used for flight modes and GPS info) If you don't have a current sensor, you can optionally delete or rename the Fuel sensor so it doesn't show in Lua Telemetry","title":"Add Telemetry Sensors to Transmitter"},{"location":"Getting-Started/#installsetup-lua-telemetry-on-transmitter","text":"Download the latest LuaTelemetry.zip file (Note: NOT the source code) Copy the contents of the ZIP file ( SCRIPTS and WIDGETS folders) to the transmitter's SD card's root Taranis: In model setup, page to DISPLAY Set desired screen to Script Select iNav Horus/Jumper T16: Long-press TELE to access the user interface/views layout Select the desired view (or create a new one) Make Layout full screen, turn off Top bar and Sliders+Trims Select Setup widgets Press Enter till a menu appears and select Select widget Scroll to the iNav widget and press Enter Optionally (while still selecting the iNAV script), long-press Enter , select Widget settings where you can enable Restore (to restore your theme's colors) and set your theme's Text color and Warning color Nirvana NV14: Press the Widgets icon Select the desired view Change the layout to full screen Uncheck all boxes Select Setup widgets , tap the screen and select iNAV Optionally, you can enable Restore (to restore your theme's colors) and set your theme's Text color and Warning color Press EXIT or RTN several times to exit (back icon on Nirvana)","title":"Install/Setup Lua Telemetry on Transmitter"},{"location":"Getting-Started/#download-options","text":"When downloading INAV Lua Telemetry . There may be multiple download options at the bottom of the release. Following are descriptions of each download option: LuaTelemetry-Horus-en.zip - Horus transmitters with English sound files only LuaTelemetry-Horus.zip - Horus transmitters with sound files for all supported languages LuaTelemetry-Taranis-en.zip - Taranis transmitters with English sound files only LuaTelemetry-Taranis.zip - Taranis transmitters with sound files for all supported languages LuaTelemetry.zip - Taranis and Horus including sound files for all supported languages Source code (zip) - ZIP compressed source code for this release - not for transmitter install Source code (tar.gz) - Tarball format source code for this release - not for transmitter install If you just want to install without thinking about it, download and install the latest LuaTelemetry.zip file which includes everything and will work on supported radios in any available language. The other download options may be provided in order to save a bit of SD card space on the transmitter and to keep the install clean of unneeded files.","title":"Download Options"},{"location":"Getting-Started/#running-lua-telemetry","text":"Taranis: From the main screen on your transmitter, long-press Page (down d-pad on X-Lite) If Lua Telemetry isn't on your first page, short-press Page to the Lua Telemetry screen Horus/Jumper T16/Nirvava NV14: From the main screen on your transmitter, press PgUp/Dn (swipe left on Nirvana) to the Lua Telemetry view Screen Description Configuration Settings Tips & Common Problems","title":"Running Lua Telemetry"},{"location":"Multilingual-Support/","text":"Currently supported ( language submissions encouraged! ) Czech (cz) Dutch (nl) English (en) French (fr) German (de) Hungarian (hu) Italian (it) Polish (pl) Portuguese (pt) Russian (ru) Slovak (sk) Spanish (es) Swedish (se) How to select a supported language Lua Telemetry uses the OpenTX settings for multilingual support. If language voice files or language translation file doesn't exist, Lua Telemetry will default to English. To change the voice prompts you set the Voice Language setting on the RADIO SETUP menu. You'll need to cycle power to your transmitter for Lua Telemetry to see the change. For the flight modes and config menu translation, you need to be running OpenTX firmware with the desired Menu Language. From the OpenTX Companion: Go to Settings (the gear icon) Select the desired Menu Language Download firmware Write firmware to radio. Adding new language To add support for one of the above languages, follow these steps: Language voice files need to be created. Here's is a list of the 32 voice files required A lang_XX.lua language translation file needs to be created. Here's an example of the German translation file: lang_de.lua (note the maximum character length comments) The voice and translation files can be submitted in a PR or you can create a feature request issue and attach the files and I'll take care of it. Either way, be prepared to possibly do some tweaking if the translation lengths are too long.","title":"Multilingual Support"},{"location":"Multilingual-Support/#currently-supported-language-submissions-encouraged","text":"Czech (cz) Dutch (nl) English (en) French (fr) German (de) Hungarian (hu) Italian (it) Polish (pl) Portuguese (pt) Russian (ru) Slovak (sk) Spanish (es) Swedish (se)","title":"Currently supported (language submissions encouraged!)"},{"location":"Multilingual-Support/#how-to-select-a-supported-language","text":"Lua Telemetry uses the OpenTX settings for multilingual support. If language voice files or language translation file doesn't exist, Lua Telemetry will default to English. To change the voice prompts you set the Voice Language setting on the RADIO SETUP menu. You'll need to cycle power to your transmitter for Lua Telemetry to see the change. For the flight modes and config menu translation, you need to be running OpenTX firmware with the desired Menu Language. From the OpenTX Companion: Go to Settings (the gear icon) Select the desired Menu Language Download firmware Write firmware to radio.","title":"How to select a supported language"},{"location":"Multilingual-Support/#adding-new-language","text":"To add support for one of the above languages, follow these steps: Language voice files need to be created. Here's is a list of the 32 voice files required A lang_XX.lua language translation file needs to be created. Here's an example of the German translation file: lang_de.lua (note the maximum character length comments) The voice and translation files can be submitted in a PR or you can create a feature request issue and attach the files and I'll take care of it. Either way, be prepared to possibly do some tweaking if the translation lengths are too long.","title":"Adding new language"},{"location":"Screen-Description/","text":"Getting Started From transmitter's main screen, long hold the Page button (down d-pad on X-Lite) to show custom screens, short press Page to the iNav screen If you get a not enough memory error when starting Lua Telemetry, please see the Tips & Common Problems wiki General Information Flashing values indicate a warning (for example: no telemetry, battery low, altitude too high) Beeping/vibration is associated with critical warnings and there will be an associated flashing value to indicate what the beep/vibration is a result of The script gives voice feedback for flight modes, battery levels and warnings (no need to manually set this up) Voice alerts will play in background even if iNav Lua Telemetry screen is not displayed When not armed you can flip between max/min and current values by using the dial or +/- buttons Short press Enter to quickly flip between the views Classic View To flip between compass-based direction and launch/pilot-based orientation and location, use the dial or +/- buttons The launch/pilot-based orientation view is useful if model orientation is unknown If model is further than 25 feet away, the launch/pilot-based view will show the direction of the model based on launch/pilot position and orientation (useful to locate a lost model) Pilot (Glass Cockpit) View Radar (Map) View To flip between compass-based and launch/pilot-based orientation and radar, use the dial or +/- buttons","title":"Screen Description"},{"location":"Screen-Description/#getting-started","text":"From transmitter's main screen, long hold the Page button (down d-pad on X-Lite) to show custom screens, short press Page to the iNav screen If you get a not enough memory error when starting Lua Telemetry, please see the Tips & Common Problems wiki","title":"Getting Started"},{"location":"Screen-Description/#general-information","text":"Flashing values indicate a warning (for example: no telemetry, battery low, altitude too high) Beeping/vibration is associated with critical warnings and there will be an associated flashing value to indicate what the beep/vibration is a result of The script gives voice feedback for flight modes, battery levels and warnings (no need to manually set this up) Voice alerts will play in background even if iNav Lua Telemetry screen is not displayed When not armed you can flip between max/min and current values by using the dial or +/- buttons Short press Enter to quickly flip between the views","title":"General Information"},{"location":"Screen-Description/#classic-view","text":"To flip between compass-based direction and launch/pilot-based orientation and location, use the dial or +/- buttons The launch/pilot-based orientation view is useful if model orientation is unknown If model is further than 25 feet away, the launch/pilot-based view will show the direction of the model based on launch/pilot position and orientation (useful to locate a lost model)","title":"Classic View"},{"location":"Screen-Description/#pilot-glass-cockpit-view","text":"","title":"Pilot (Glass Cockpit) View"},{"location":"Screen-Description/#radar-map-view","text":"To flip between compass-based and launch/pilot-based orientation and radar, use the dial or +/- buttons","title":"Radar (Map) View"},{"location":"Tips-%26-Common-Problems/","text":"Common Taranis Errors Script syntax error attempt to call a nil value Script panic not enough memory Script syntax error not enough memory Solution Be sure you're following the Install/Setup Lua Telemetry on Transmitter instructions If you're still getting the above errors, it's probably due to a lack of memory available on your transmitter (very common on Taranis). You can free up memory by removing other Lua Scripts from other screens, deleting unused models or turning off OpenTX firmware build options. Be sure to reboot your controller to free up memory after making a change. NOTE: If trying to run Betaflight Tx lua script for VTx control, you can't run Betaflight Tx lua script and Lua Telemetry at the same time. Instead, change VTx settings by using the OSD menu Common Horus Errors disabled error on widget refresh(): ?:0: attempt to compare number with nil Solution Upgrade to the latest release which fixes these issues Tips If you have any issues, first make sure you're using the release version 2.2.2+ of OpenTX. There's some bugs in pre-release and release candidate versions that cause Lua Telemetry to crash Preferably use the latest version of your TX firmware (OpenTX or EdgeTX) Between flights (before armed), long-press Enter/dial and select Reset telemetry to reset telemetry values If current sensor isn't present or battery isn't fully charged when plugged in , fuel gauge will be based on battery voltage If fuel gauge isn't shown or accurate, be sure you've set CLI values smartport_fuel_unit = percent and battery_capacity correctly. Also, current sensor settings in the configurator need to be calibrated for proper amperage and fuel % data (not applicable to Crossfire) If using INAV v2.0.0+ and FrSky telemetry, set frsky_pitch_roll = ON in CLI settings and search for new telemetry sensors for accurate attitude display and pitch angle (not applicable to Crossfire) Lua Telemetry uses transmitter settings for RSSI warning/critical levels for bar gauge range and audio/haptic warnings Lua Telemetry uses transmitter settings for transmitter voltage min/max for battery bar gauge in screen title If you change a telemetry sensor's unit (for example m to ft), power cycle the transmitter to see changes If config option Battery View is set to Total but average cell voltage is displayed, send INAV CLI command: set report_cell_voltage = OFF When GPS accuracy (HDOP) is displayed as a decimal, the range is 0.8 - 5.3 and it's rounded to the nearest 0.5 HDOP. This is due to HDOP being sent as a single integer from 0 to 9, not as the actual HDOP decimal value (not applicable to Crossfire) Reporting Issues on Github Submit issues and PRs in English only. Issues / PRs in other languages may be closed without further investigation. Please include: The TX type (e.g. Radiomaster TX16S, Horus, Zorro etc.) The type and version of radio firmware (e.g. EdgeTX 2.8.0, OpenTX 2.3.15 etc). The flight controller and INAV version (e.g. MATEKF405, INAV 5.1.0) Try running the script in the EdgeTX / OpenTX Companion. This will force debug mode and display additional information, in particular module line numbers. Please including this information in any Github issue. For issues concerning discovery or display of sensor information, please provide an EdgeTX / OpenTX telemetry log for TXs that provide such a facility.","title":"Tips & Common Problems"},{"location":"Tips-%26-Common-Problems/#common-taranis-errors","text":"Script syntax error attempt to call a nil value Script panic not enough memory Script syntax error not enough memory","title":"Common Taranis Errors"},{"location":"Tips-%26-Common-Problems/#solution","text":"Be sure you're following the Install/Setup Lua Telemetry on Transmitter instructions If you're still getting the above errors, it's probably due to a lack of memory available on your transmitter (very common on Taranis). You can free up memory by removing other Lua Scripts from other screens, deleting unused models or turning off OpenTX firmware build options. Be sure to reboot your controller to free up memory after making a change. NOTE: If trying to run Betaflight Tx lua script for VTx control, you can't run Betaflight Tx lua script and Lua Telemetry at the same time. Instead, change VTx settings by using the OSD menu","title":"Solution"},{"location":"Tips-%26-Common-Problems/#common-horus-errors","text":"disabled error on widget refresh(): ?:0: attempt to compare number with nil","title":"Common Horus Errors"},{"location":"Tips-%26-Common-Problems/#solution_1","text":"Upgrade to the latest release which fixes these issues","title":"Solution"},{"location":"Tips-%26-Common-Problems/#tips","text":"If you have any issues, first make sure you're using the release version 2.2.2+ of OpenTX. There's some bugs in pre-release and release candidate versions that cause Lua Telemetry to crash Preferably use the latest version of your TX firmware (OpenTX or EdgeTX) Between flights (before armed), long-press Enter/dial and select Reset telemetry to reset telemetry values If current sensor isn't present or battery isn't fully charged when plugged in , fuel gauge will be based on battery voltage If fuel gauge isn't shown or accurate, be sure you've set CLI values smartport_fuel_unit = percent and battery_capacity correctly. Also, current sensor settings in the configurator need to be calibrated for proper amperage and fuel % data (not applicable to Crossfire) If using INAV v2.0.0+ and FrSky telemetry, set frsky_pitch_roll = ON in CLI settings and search for new telemetry sensors for accurate attitude display and pitch angle (not applicable to Crossfire) Lua Telemetry uses transmitter settings for RSSI warning/critical levels for bar gauge range and audio/haptic warnings Lua Telemetry uses transmitter settings for transmitter voltage min/max for battery bar gauge in screen title If you change a telemetry sensor's unit (for example m to ft), power cycle the transmitter to see changes If config option Battery View is set to Total but average cell voltage is displayed, send INAV CLI command: set report_cell_voltage = OFF When GPS accuracy (HDOP) is displayed as a decimal, the range is 0.8 - 5.3 and it's rounded to the nearest 0.5 HDOP. This is due to HDOP being sent as a single integer from 0 to 9, not as the actual HDOP decimal value (not applicable to Crossfire)","title":"Tips"},{"location":"Tips-%26-Common-Problems/#reporting-issues-on-github","text":"Submit issues and PRs in English only. Issues / PRs in other languages may be closed without further investigation. Please include: The TX type (e.g. Radiomaster TX16S, Horus, Zorro etc.) The type and version of radio firmware (e.g. EdgeTX 2.8.0, OpenTX 2.3.15 etc). The flight controller and INAV version (e.g. MATEKF405, INAV 5.1.0) Try running the script in the EdgeTX / OpenTX Companion. This will force debug mode and display additional information, in particular module line numbers. Please including this information in any Github issue. For issues concerning discovery or display of sensor information, please provide an EdgeTX / OpenTX telemetry log for TXs that provide such a facility.","title":"Reporting Issues on Github"},{"location":"Upgrade/","text":"Upgrade INAV Telemetry Already have Lua Telemetry installed If you're already running Lua Telemetry, you can quickly upgrade to the latest release version by following these simple steps: Download the latest LuaTelemetry.zip file (Note: NOT the source code) Copy the contents of the ZIP file ( SCRIPTS and WIDGETS folders) to the transmitter's SD card's root And you're ready to go! Upgrade to development build Please note: These instructions are for upgrading from a previous version of Lua Telemetry. If you haven't yet installed Lua Telemetry, you'll need to first do a full installation and then follow these instructions. Typically, the development branch of Lua Telemetry is fairly bug free. For the most part, features are added and tested before merging to development. Current status of development branch: To upgrade to the development build, use the following instructions: Download LuaTelemetry-development.zip Open or extract the LuaTelemetry-development.zip file Open the LuaTelemetry-development folder and navigate to the dist folder Copy the contents of the dist folder ( SCRIPTS and WIDGETS folders) to the transmitter's SD card's root You'll also sometimes need the latest INAV build to go along with the development branch of Lua Telemetry. So it's also a good idea to upgrade INAV to the latest release. If there's ever an issue, you can roll back to the latest release by following the upgrade instructions.","title":"Upgrade"},{"location":"Upgrade/#upgrade-inav-telemetry","text":"","title":"Upgrade INAV Telemetry"},{"location":"Upgrade/#already-have-lua-telemetry-installed","text":"If you're already running Lua Telemetry, you can quickly upgrade to the latest release version by following these simple steps: Download the latest LuaTelemetry.zip file (Note: NOT the source code) Copy the contents of the ZIP file ( SCRIPTS and WIDGETS folders) to the transmitter's SD card's root And you're ready to go!","title":"Already have Lua Telemetry installed"},{"location":"Upgrade/#upgrade-to-development-build","text":"Please note: These instructions are for upgrading from a previous version of Lua Telemetry. If you haven't yet installed Lua Telemetry, you'll need to first do a full installation and then follow these instructions. Typically, the development branch of Lua Telemetry is fairly bug free. For the most part, features are added and tested before merging to development. Current status of development branch: To upgrade to the development build, use the following instructions: Download LuaTelemetry-development.zip Open or extract the LuaTelemetry-development.zip file Open the LuaTelemetry-development folder and navigate to the dist folder Copy the contents of the dist folder ( SCRIPTS and WIDGETS folders) to the transmitter's SD card's root You'll also sometimes need the latest INAV build to go along with the development branch of Lua Telemetry. So it's also a good idea to upgrade INAV to the latest release. If there's ever an issue, you can roll back to the latest release by following the upgrade instructions.","title":"Upgrade to development build"}]}